---
title: Bob Davidson.dev
link: https://bobdavidson.dev/
description: Homepage of Bob Davidson, Director of Development at Blend Interactive, Web Developer, Tinkerer
updates:
  - id: link/13-say-hello-2b2d
    title: Say hello to 2B2D
    type: link
    series: Blog Post
    link: https://mrdrbob.itch.io/2b2d-example-game/devlog/637606/say-hello-to-2b2d
    description: >
      <p>A quick introduction to 2B2D, my home-grown game engine, and the concepts contained there-in.</p>
  - id: github/12-2b2d
    title: 2B2D - My homegrown 2D game engine
    type: github
    series: Github
    link: https://github.com/mrdrbob/2b2d
    description: >
      <p>2B2D is a very simple 2D-only game engine heavily inspired by <a href="https://bevyengine.org/"  target="_blank" rel="noopener">Bevy</a>, written in Typescript, rendered in WebGPU, with no dependencies.</p>
  - id: link/11-log-seq-blog-post
    title: Journaling as a Management Tool
    type: link
    series: Blog Post
    link: https://www.blendinteractive.com/thoughts/journaling-as-a-management-tool/
    description: >
      <p>How I supplement my workflow with a mix of technology, process, and habit through daily journaling.</p>
  - id: link/10-rendering-content
    title: Events and Scheduled Jobs in Optimizely CMS 12
    type: youtube
    series: Optimizely CMS with Bob
    link: https://youtu.be/aPx2klRTnvs
    description: >
      <p>A lengthy introduction to content events and building scheduled jobs in Optimizely CMS 12.</p>
  - id: link/09-rendering-content
    title: Working with Content in Optimizely CMS
    type: youtube
    series: Optimizely CMS with Bob
    link: https://youtu.be/2IfrEB9IbBA
    description: >
      <p>An introduction to working with content objects, content APIs, and avoiding some common stumbling blocks for people who are new to the CMS platform.</p>
  - id: link/08-rendering-content
    title: Rendering Content in Optimizely CMS
    type: youtube
    series: Optimizely CMS with Bob
    link: https://youtu.be/DTvoE4xCVSA
    description: >
      <p>A brief (hour long) introduction to several basic ways to render content in Optimizely CMS 12, including rendering pages via a controller, blocks via a controller, blocks via the template coordinator, and page partials via the template coordinator.</p>
  - id: link/07-content-modeling
    title: Content Modeling in Optimizely CMS
    type: youtube
    series: Optimizely CMS with Bob
    link: https://youtu.be/XxHBlCZrvEE
    description: >
      <p>A discussion about what content and content modeling actually are from a conceptual point of view, followed by a brief introduction into making content types for the CMS.</p>
  - id: link/06-opti-from-scratch
    title: Optimizely CMS Site Project Setup
    type: youtube
    series: Optimizely CMS with Bob
    link: https://youtu.be/mdQYec2JhQA
    description: >
      <p>I revamp my old series on building Episerver (now Optimizely CMS) sites from the ground up.</p>
  - id: link/05-xhtml-strings
    title: Content References in XhtmlString Properties
    type: link
    series: Blog Post
    link: https://www.blendinteractive.com/thoughts/content-references-in-xhtmlstrings/
    description: >
      <p>XHtmlString properties are more than just HTML, they include HTML, internal links to content, embedded blocks, personalization, and more. Here I take a brief look at the internals of XhtmlString properties and the fragments that make them.</p>
  - id: github/04-aoc-2021
    title: Advent of Code 
    type: github
    series: Github
    link: https://github.com/mrdrbob/aoc-2021
    description: >
      <p>Another year, another failed attempt. Actually, I completed all of the puzzles this year, just a month and a half late. Like last year, I kept a dev diary of sorts. Unlike last year, I did all the puzzles in C#.</p>
  - id: github/03-this-site
    title: This Site (BobDavidson.dev)
    type: github
    series: Github
    link: https://github.com/mrdrbob/bobdavidson.dev
    description: >
      <p>If you're wondering how this site is built and deployed, wonder no more. I've published the source code on Github. There's not actually much interesting here (except <em>maybe</em> the <a href="https://github.com/mrdrbob/bobdavidson.dev/blob/main/gulpfile.js">Gulp file that builds everything</a>), but perhaps someone will find something useful here.</p>
  - id: github/02-aoc-2020
    title: Advent of Code 2020
    type: github
    series: Github
    link: https://github.com/mrdrbob/aoc-2020
    description: >
      <p>Another year and another attempt at <a href="https://adventofcode.com/2020" target="_blank" rel="noopener">Advent of Code</a>. Once again, I did not finish, though I made it slightly farther than before (day 15). And once again I tried it in <a href="https://www.rust-lang.org/" target="_blank" rel="noopener">Rust</a>. You can read my development diary as I worked through the syntax and logic. I've not used systems languages much, but I've had much greater success with Rust than I have any other systems language. It's not quite ready to be a part of my day job, but I see why it has such buzz.</p>
  - id: github/01-godot
    title: Playing with Godot Game Engine
    type: github
    series: Github
    link: https://github.com/mrdrbob/godot-test
    description: >
      <p>I started playing around a bit with <a href="https://godotengine.org/" target="_blank" rel="noopener">Godot</a>, following some tutorials and building a very rough, proof-of-concept side-scrolling platformer. In the <a href="https://github.com/mrdrbob/godot-test">Github repo</a>, you can find all my files and read through my development diary as I tried to figure out just what the heck I was doing. Overall, though, I'm extremely impressed with how polished Godot is, and how quickly a person can get up and running.</p>
  - id: epi/01
    title: Episode 1 | On Page Editing Meta Properties
    type: youtube
    series: Episerver with Bob
    link: https://youtu.be/pgslebVq7v8
    description: >
      <p>I show one technique to make metadata and otherwise non-visible page properties more user-friendly for on-page editing in Episerver.</p>
  - id: refactoring/06
    title: Episode 6 | Encoding
    type: youtube
    series: Refactoring with Bob
    link: https://youtu.be/05HWg5R_zsE
    description: >
      <p>I show one technique to make metadata and otherwise non-visible page properties more user-friendly for on-page editing in Episerver.</p>
  - id: refactoring/05
    title: Episode 5 | Deconstructing Enumerators
    type: youtube
    series: Refactoring with Bob
    link: https://youtu.be/05HWg5R_zsE
    description: >
      <p>In which we answer the questions: how do `foreach` loops work? How do `yield return` statements work? We look at the C# compiler actually generates (more or less) in these cases.</p>
  - id: refactoring/04
    title: Episode 4 | Homebuilt CMS Deep Dive
    type: youtube
    series: Refactoring with Bob
    link: https://youtu.be/6gawVMHtfdA
    description: >
      <p>In which we explore a home-built, makeshift content management system. Thanks to John for letting us examine and critique his code!</p>
  - id: refactoring/03
    title: Episode 3 | Broken Keyboard Code Challenge
    type: youtube
    series: Refactoring with Bob
    link: https://youtu.be/lRA53HiXIxw
    description: >
      <p>In which we solve a code challenge (being intentionally naive), and then refactor the solve.</p>
  - id: refactoring/02
    title: Episode 2 | Gated Content Form
    type: youtube
    series: Refactoring with Bob
    link: https://youtu.be/5Vlx2q7fQp0
    description: >
      <p>In which we look at a made-up gated content form controller in MVC.</p>
  - id: refactoring/01
    title: Episode 1 | Comment Approval
    type: youtube
    series: Refactoring with Bob
    link: https://youtu.be/pgslebVq7v8
    description: >
      <p>In which we look at a made-up function that adds/publishes comments to a page in a Content Management System.</p>
